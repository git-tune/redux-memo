{"version":3,"sources":["store/Store.js","styles/variable.js","styles/index.js","components/molecules/Item.js","components/molecules/Memo.js","components/molecules/AddForm.js","components/molecules/FindForm.js","components/molecules/HistoryForm.js","components/templates/Memo.js","App.js","index.js"],"names":["initData","data","message","mode","fdata","memoReducer","state","action","type","addReduce","deleteReduce","findReduce","d","Date","f","getMonth","getDate","getHours","getMinutes","created","_newdata","slice","find","forEach","value","indexOf","push","newdata","splice","index","createStore","colors","main","white","shadow","primary","danger","size","GlobalStyle","createGlobalStyle","black","Tr","styled","tr","Th","th","MessageTd","td","DayTd","BtnTd","Btn","a","Item","props","number","doAction","bind","e","preventDefault","text","num","this","dispatch","setState","onClick","Component","connect","Table","table","Memo","n","map","key","Container","div","Form","form","Input","input","AddForm","doChange","target","onSubmit","onChange","required","FindForm","History","p","HistoryForm","Title","h1","SubTitle","MemoApp","App","persistConfig","storage","persistedReducer","persistReducer","store","pstore","persistStore","ReactDOM","render","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.36fe497e.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst initData = {\n  data: [],\n  message: 'please type message:',\n  mode: 'default',\n  fdata: [],\n};\n\n// Reducer\n\nexport const memoReducer = (state = initData, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return addReduce(state, action);\n    case 'DELETE':\n      return deleteReduce(state, action);\n    case 'FIND':\n      return findReduce(state, action);\n    default:\n      return state;\n  }\n};\n\n// Reduce Action\n\nconst addReduce = (state, action) => {\n  let d = new Date();\n  let f =\n    d.getMonth() +\n    1 +\n    '/' +\n    d.getDate() +\n    ' ' +\n    d.getHours() +\n    ':' +\n    d.getMinutes();\n\n  let data = {\n    message: action.message,\n    created: f,\n  };\n\n  let _newdata = state.data.slice();\n  let newdata = [..._newdata, data];\n\n  return {\n    data: newdata,\n    message: `Added \"${data.message}\"`,\n    mode: 'default',\n    fdata: [],\n  };\n};\n\nconst findReduce = (state, action) => {\n  let f = action.find;\n  let fdata = [];\n  state.data.forEach((value) => {\n    if (value.message.indexOf(f) >= 0) {\n      fdata.push(value);\n    }\n  });\n\n  return {\n    data: state.data,\n    message: 'find \"' + f + '\":',\n    mode: 'find',\n    fdata: fdata,\n  };\n};\n\nconst deleteReduce = (state, action) => {\n  let newdata = state.data.slice();\n  newdata.splice(action.index, 1);\n  return {\n    data: newdata,\n    message: `deleted \"${action.message}\"`,\n    mode: 'delete',\n    fdata: [],\n  };\n};\n\n// Action Creater\n\nexport const addMemo = (text) => {\n  return {\n    type: 'ADD',\n    message: text,\n  };\n};\n\nexport const deleteMemo = (text, num) => {\n  return {\n    type: 'DELETE',\n    message: text,\n    index: num,\n  };\n};\n\nexport const findMemo = (text) => {\n  return {\n    type: 'FIND',\n    find: text,\n  };\n};\n\nexport default createStore(memoReducer);\n","export const colors = {\n  main: '#ecf0f3',\n  white: 'white',\n  shadow: '#d1d9e6',\n  primary: '#60d2b6',\n  danger: '#ee675d',\n};\n\nexport const shadow = {\n  conve: '3px 3px 3px #d1d9e6, -3px -3px 3px #ffffff',\n  focus_concave: 'inset 5px 5px 5px #d1d9e6, inset -5px -5px 5px #ffffff',\n  concave: 'inset 3px 3px 3px #d1d9e6, inset -3px -3px 3px #ffffff',\n};\n","import { createGlobalStyle } from 'styled-components';\nimport { colors } from './variable';\n\nconst size = {\n  mobile: '576px',\n  tablet: '768px',\n  laptop: '1200px',\n  desktop: '2560px',\n};\n\nexport const device = {\n  mobile: `(max-width: ${size.mobile})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  desktop: `(max-width: ${size.desktop})`,\n};\n\nexport const GlobalStyle = createGlobalStyle`\n    html {\n      font-family: 'Lato', 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n    }\n    *, *:before, *:after {\n       box-sizing: border-box;\n       padding: 0;\n       margin: 0; \n       background: ${colors.main};\n    }\n    li {\n        list-style-type: none;\n    }\n    a { \n        color: ${colors.black};\n        text-decoration: none;\n    }\n    td {\n        width: 250px;\n    }\n    input {\n      font-family: 'Lato', 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n      background: ${colors.main};\n      border: none;\n      outline: none;\n      border-radius: 10px;\n    }\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { colors, shadow } from '../../styles/variable';\nimport { deleteMemo } from '../../store/Store';\n\nconst Tr = styled.tr`\n  height: 40px;\n  color: ${colors.black};\n  font-size: 14px;\n`;\n\nconst Th = styled.th`\n  width: 70px;\n  box-shadow: ${shadow.concave}, ${shadow.conve};\n`;\n\nconst MessageTd = styled.td`\n  min-width: 250px;\n  max-width: auto;\n  white-space: nowrap;\n  text-align: left;\n  padding: 0 10px;\n  box-shadow: ${shadow.concave}, ${shadow.conve};\n`;\n\nconst DayTd = styled.td`\n  width: 100px;\n  box-shadow: ${shadow.concave}, ${shadow.conve};\n`;\n\nconst BtnTd = styled.td`\n  width: 70px;\n  box-shadow: ${shadow.concave}, ${shadow.conve};\n`;\n\nconst Btn = styled.a`\n  cursor: pointer;\n  padding: 3px 10px;\n  font-size: 13px;\n  color: white;\n  background: ${colors.danger};\n  box-shadow: ${shadow.conve};\n  border-radius: 5px;\n  &:active {\n    box-shadow: ${shadow.concave};\n    font-size: 0.84rem;\n  }\n`;\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: 0,\n    };\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doAction(e) {\n    e.preventDefault();\n    let action = deleteMemo(this.props.value.message, this.props.index);\n    this.props.dispatch(action);\n    this.setState({\n      number: 0,\n    });\n  }\n  render() {\n    return (\n      <Tr>\n        <Th>No. {this.props.index}</Th>\n        <MessageTd>{this.props.value.message}</MessageTd>\n        <DayTd>{this.props.value.created}</DayTd>\n        <BtnTd>\n          <Btn onClick={this.doAction}>Del</Btn>\n        </BtnTd>\n      </Tr>\n    );\n  }\n}\n\nexport default connect()(Item);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Item from './Item';\n\nconst Table = styled.table`\n  margin: 0 auto;\n`;\n\nclass Memo extends Component {\n  render() {\n    let data;\n    let n = 0;\n    switch (this.props.mode) {\n      case 'default':\n        data = this.props.data.map((value) => (\n          <Item key={value.message} value={value} index={n++} />\n        ));\n        break;\n\n      case 'find':\n        data = this.props.fdata.map((value) => (\n          <Item key={value.message} value={value} index={n++} />\n        ));\n        break;\n\n      case 'delete':\n        data = this.props.data.map((value) => (\n          <Item key={value.message} value={value} index={n++} />\n        ));\n        break;\n\n      default:\n        data = this.props.data.map((value) => (\n          <Item key={value.message} value={value} index={n++} />\n        ));\n    }\n\n    return (\n      <Table>\n        <tbody>{data}</tbody>\n      </Table>\n    );\n  }\n}\n\nexport default connect((state) => state)(Memo);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { addMemo } from '../../store/Store';\nimport { colors, shadow } from '../../styles/variable';\n\nconst Container = styled.div``;\n\nconst Form = styled.form``;\n\nconst Input = styled.input`\n  width: 330px;\n  height: 35px;\n  font-size: 16px;\n  padding: 10px 15px;\n  margin: 5px 0;\n  box-shadow: ${shadow.concave};\n  transition: 0.5s;\n  &:focus {\n    box-shadow: ${shadow.focus_concave};\n  }\n`;\n\nconst Btn = styled.input`\n  width: 80px;\n  height: 30px;\n  color: white;\n  background: ${colors.primary};\n  font-size: 14px;\n  padding: 2px 10px;\n  margin-left: 15px;\n  box-shadow: ${shadow.conve};\n  &:active {\n    box-shadow: ${shadow.concave};\n    transform: scale(0.99, 0.99);\n  }\n`;\n\nclass AddForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n    };\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doChange(e) {\n    this.setState({\n      message: e.target.value,\n    });\n  }\n\n  doAction(e) {\n    e.preventDefault();\n    let action = addMemo(this.state.message);\n    this.props.dispatch(action);\n    this.setState({\n      message: '',\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Form onSubmit={this.doAction}>\n          <Input\n            type='text'\n            onChange={this.doChange}\n            value={this.state.message}\n            required\n          />\n          <Btn type='submit' value='Add' />\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default connect((state) => state)(AddForm);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { findMemo } from '../../store/Store';\nimport { shadow } from '../../styles/variable';\n\nconst Form = styled.form``;\n\nconst Input = styled.input`\n  width: 100px;\n  height: 35px;\n  font-size: 16px;\n  padding: 10px 15px;\n  margin: 5px 0;\n  margin-left: 20px;\n  box-shadow: ${shadow.concave};\n  transition: 0.5s;\n  &:focus {\n    box-shadow: ${shadow.focus_concave};\n`;\n\nconst Btn = styled.input`\n  width: 80px;\n  height: 30px;\n  font-size: 14px;\n  padding: 2px 10px;\n  margin-left: 15px;\n  box-shadow: ${shadow.conve};\n  &:active {\n    box-shadow: ${shadow.concave};\n    transform: scale(0.99, 0.99);\n  }\n`;\n\nclass FindForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      find: '',\n    };\n\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doChange(e) {\n    this.setState({\n      find: e.target.value,\n    });\n  }\n\n  doAction(e) {\n    e.preventDefault();\n    let action = findMemo(this.state.find);\n    this.props.dispatch(action);\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.doAction}>\n        <Input\n          type='text'\n          onChange={this.doChange}\n          value={this.state.message}\n        />\n        <Btn type='submit' value='Find' />\n      </Form>\n    );\n  }\n}\n\nexport default connect((state) => state)(FindForm);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nconst Container = styled.div``;\n\nconst History = styled.p`\n  margin-top: 5px;\n`;\n\nclass HistoryForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n    };\n  }\n\n  render() {\n    return (\n      <Container>\n        <History>{this.props.message}</History>\n      </Container>\n    );\n  }\n}\n\nexport default connect((state) => state)(HistoryForm);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Memo from '../molecules/Memo';\nimport AddForm from '../molecules/AddForm';\nimport FindForm from '../molecules/FindForm';\nimport HistoryForm from '../molecules/HistoryForm';\nimport { colors } from '../../styles/variable';\n\nconst Container = styled.div`\n  background: ${colors.main};\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  color: ${colors.black};\n  margin: 50px 0 0 0;\n`;\n\nconst SubTitle = styled.p`\n  font-size: 15px;\n  margin-bottom: 30px;\n`;\n\nconst Table = styled.table`\n  margin: 5px auto 20px auto;\n`;\n\nconst MemoApp = () => {\n  return (\n    <Container>\n      <Title>Redux Memo</Title>\n      <SubTitle>This App for studying Redux-Persist</SubTitle>\n      <AddForm />\n      <Table>\n        <tbody>\n          <tr>\n            <td>\n              <FindForm />\n            </td>\n            <td>\n              <HistoryForm />\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n      <Memo />\n    </Container>\n  );\n};\n\nexport default MemoApp;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { GlobalStyle } from './styles';\nimport MemoApp from './components/templates/Memo';\n\nconst Container = styled.div``;\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <GlobalStyle />\n        <MemoApp />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { memoReducer } from './store/Store';\nimport App from './App';\n\n// Redux Persist Setting\n\nconst persistConfig = {\n  key: 'memo',\n  storage,\n};\n\n// persist reducer\n\nconst persistedReducer = persistReducer(persistConfig, memoReducer);\n\n// store persister\n\nlet store = createStore(persistedReducer);\nlet pstore = persistStore(store);\n\n// rendering\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<p>loading...</p>} persistor={pstore}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\nexport default pstore;\n"],"sourceRoot":""}