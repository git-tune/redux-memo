{"version":3,"sources":["store/Store.js","styles/variable.js","styles/index.js","components/molecules/Item.js","components/molecules/Memo.js","components/molecules/AddForm.js","components/molecules/FindForm.js","components/molecules/DelForm.js","components/templates/Memo.js","App.js","index.js"],"names":["initData","data","message","mode","fdata","memoReducer","state","action","type","addReduce","deleteReduce","findReduce","d","Date","f","getMonth","getDate","getHours","getMinutes","created","newdata","slice","push","find","forEach","value","indexOf","splice","index","createStore","colors","primary","white","shadow","weak_black","size","GlobalStyle","createGlobalStyle","black","Tr","styled","tr","Th","th","Td","td","Time","Item","this","props","Component","connect","Table","table","Memo","n","map","key","Container","div","Form","form","Input","input","Btn","AddForm","doChange","bind","doAction","e","setState","target","preventDefault","dispatch","onSubmit","onChange","required","FindForm","Select","select","DelForm","number","items","defaultValue","Title","h1","MemoApp","App","Message","counter","Button","shiftkey","ctrlKey","onClick","persistConfig","storage","persistedReducer","persistReducer","store","pstore","persistStore","ReactDOM","render","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.bff7c527.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst initData = {\n  data: [],\n  message: 'please type message:',\n  mode: 'default',\n  fdata: [],\n};\n\n// Reducer\n\nexport const memoReducer = (state = initData, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return addReduce(state, action);\n    case 'DELETE':\n      return deleteReduce(state, action);\n    case 'FIND':\n      return findReduce(state, action);\n    default:\n      return state;\n  }\n};\n\n// Reduce Action\n\nconst addReduce = (state, action) => {\n  let d = new Date();\n  let f =\n    d.getMonth() +\n    1 +\n    '/' +\n    d.getDate() +\n    ' ' +\n    d.getHours() +\n    ':' +\n    d.getMinutes();\n\n  let data = {\n    message: action.message,\n    created: f,\n  };\n\n  let newdata = state.data.slice();\n  newdata.push(data);\n\n  return {\n    data: newdata,\n    message: 'Added!',\n    mode: 'default',\n    fdata: [],\n  };\n};\n\nconst findReduce = (state, action) => {\n  let f = action.find;\n  let fdata = [];\n  state.data.forEach((value) => {\n    if (value.message.indexOf(f) >= 0) {\n      fdata.push(value);\n    }\n  });\n\n  return {\n    data: state.data,\n    message: 'find \"' + f + '\":',\n    mode: 'find',\n    fdata: fdata,\n  };\n};\n\nconst deleteReduce = (state, action) => {\n  let newdata = state.data.slice();\n  newdata.splice(action.index, 1);\n  return {\n    data: newdata,\n    message: 'delete \"' + action.index + '\":',\n    mode: 'delete',\n    fdata: [],\n  };\n};\n\n// Action Creater\n\nexport const addMemo = (text) => {\n  return {\n    type: 'ADD',\n    message: text,\n  };\n};\n\nexport const deleteMemo = (num) => {\n  return {\n    type: 'DELETE',\n    index: num,\n  };\n};\n\nexport const findMemo = (text) => {\n  return {\n    type: 'FIND',\n    find: text,\n  };\n};\n\nexport default createStore(memoReducer);\n","export const colors = {\n  primary: '#ecf0f3',\n  white: 'white',\n  shadow: '#d1d9e6',\n  weak_black: '#546778',\n};\n\nexport const shadow = {\n  conve: '3px 3px 3px #d1d9e6, -3px -3px 3px #ffffff',\n  focus_concave: 'inset 5px 5px 5px #d1d9e6, inset -5px -5px 5px #ffffff',\n  concave: 'inset 3px 3px 3px #d1d9e6, inset -3px -3px 3px #ffffff',\n};\n","import { createGlobalStyle } from 'styled-components';\nimport { colors } from './variable';\n\nconst size = {\n  mobile: '576px',\n  tablet: '768px',\n  laptop: '1200px',\n  desktop: '2560px',\n};\n\nexport const device = {\n  mobile: `(max-width: ${size.mobile})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  desktop: `(max-width: ${size.desktop})`,\n};\n\nexport const GlobalStyle = createGlobalStyle`\n    html {\n      font-family: 'Lato', 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n    }\n    *, *:before, *:after {\n       box-sizing: border-box;\n       padding: 0;\n       margin: 0; \n       background: ${colors.primary};\n    }\n    li {\n        list-style-type: none;\n    }\n    a { \n        color: ${colors.black};\n        text-decoration: none;\n    }\n    td {\n        width: 250px;\n    }\n    input {\n      background: ${colors.primary};\n      border: none;\n      outline: none;\n      border-radius: 10px;\n    }\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { colors, shadow } from '../../styles/variable';\n\nconst Tr = styled.tr`\n  height: 40px;\n  color: ${colors.black};\n  font-size: 14px;\n`;\n\nconst Th = styled.th`\n  width: 70px;\n  box-shadow: ${shadow.concave}, ${shadow.conve};\n`;\n\nconst Td = styled.td`\n  min-width: 250px;\n  max-width: auto;\n  white-space: nowrap;\n  text-align: left;\n  padding: 0 10px;\n  box-shadow: ${shadow.concave}, ${shadow.conve};\n`;\n\nconst Time = styled.td`\n  width: 100px;\n  box-shadow: ${shadow.concave}, ${shadow.conve};\n`;\n\nclass Item extends Component {\n  render() {\n    return (\n      <Tr>\n        <Th>No. {this.props.index}</Th>\n        <Td>{this.props.value.message}</Td>\n        <Time>{this.props.value.created}</Time>\n      </Tr>\n    );\n  }\n}\n\nexport default connect()(Item);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Item from './Item';\n\nconst Table = styled.table`\n  margin: 0 auto;\n`;\n\nclass Memo extends Component {\n  render() {\n    let data;\n    let n = 0;\n    switch (this.props.mode) {\n      case 'default':\n        data = this.props.data.map((value) => (\n          <Item key={value.message} value={value} index={n++} />\n        ));\n        break;\n\n      case 'find':\n        data = this.props.fdata.map((value) => (\n          <Item key={value.message} value={value} index={n++} />\n        ));\n        break;\n\n      case 'delete':\n        data = this.props.data.map((value) => (\n          <Item key={value.message} value={value} index={n++} />\n        ));\n        break;\n\n      default:\n        data = this.props.data.map((value) => (\n          <Item key={value.message} value={value} index={n++} />\n        ));\n    }\n\n    return (\n      <Table>\n        <tbody>{data}</tbody>\n      </Table>\n    );\n  }\n}\n\nexport default connect((state) => state)(Memo);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { addMemo } from '../../store/Store';\nimport { shadow } from '../../styles/variable';\n\nconst Container = styled.div``;\n\nconst Form = styled.form``;\n\nconst Input = styled.input`\n  width: 330px;\n  height: 35px;\n  font-size: 16px;\n  padding: 10px 15px;\n  margin: 5px 0;\n  box-shadow: ${shadow.concave};\n  transition: 0.5s;\n  &:focus {\n    box-shadow: ${shadow.focus_concave};\n  }\n`;\n\nconst Btn = styled.input`\n  width: 80px;\n  height: 30px;\n  font-size: 14px;\n  padding: 2px 10px;\n  margin-left: 15px;\n  box-shadow: ${shadow.conve};\n  &:active {\n    box-shadow: ${shadow.concave};\n    transform: scale(0.99, 0.99);\n  }\n`;\n\nclass AddForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n    };\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doChange(e) {\n    this.setState({\n      message: e.target.value,\n    });\n  }\n\n  doAction(e) {\n    e.preventDefault();\n    let action = addMemo(this.state.message);\n    this.props.dispatch(action);\n    this.setState({\n      message: '',\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Form onSubmit={this.doAction}>\n          <Input\n            type='text'\n            onChange={this.doChange}\n            value={this.state.message}\n            required\n          />\n          <Btn type='submit' value='Add' />\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default connect((state) => state)(AddForm);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { findMemo } from '../../store/Store';\nimport { shadow } from '../../styles/variable';\n\nconst Form = styled.form``;\n\nconst Input = styled.input`\n  width: 100px;\n  height: 35px;\n  font-size: 16px;\n  padding: 10px 15px;\n  margin: 5px 0;\n  margin-left: 20px;\n  box-shadow: ${shadow.concave};\n  transition: 0.5s;\n  &:focus {\n    box-shadow: ${shadow.focus_concave};\n`;\n\nconst Btn = styled.input`\n  width: 80px;\n  height: 30px;\n  font-size: 14px;\n  padding: 2px 10px;\n  margin-left: 15px;\n  box-shadow: ${shadow.conve};\n  &:active {\n    box-shadow: ${shadow.concave};\n    transform: scale(0.99, 0.99);\n  }\n`;\n\nclass FindForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      find: '',\n    };\n\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doChange(e) {\n    this.setState({\n      find: e.target.value,\n    });\n  }\n\n  doAction(e) {\n    e.preventDefault();\n    let action = findMemo(this.state.find);\n    this.props.dispatch(action);\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.doAction}>\n        <Input\n          type='text'\n          onChange={this.doChange}\n          value={this.state.message}\n        />\n        <Btn type='submit' value='Find' />\n      </Form>\n    );\n  }\n}\n\nexport default connect((state) => state)(FindForm);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { deleteMemo } from '../../store/Store';\nimport { shadow } from '../../styles/variable';\n\nconst Container = styled.div``;\n\nconst Form = styled.form``;\n\nconst Select = styled.select`\n  position: relative;\n  width: 115px;\n  outline: none;\n  border: none;\n  height: 35px;\n  border-radius: 10px;\n  padding-left: 5px;\n  box-shadow: ${shadow.concave};\n`;\n\nconst Btn = styled.input`\n  width: 80px;\n  height: 30px;\n  font-size: 14px;\n  padding: 2px 10px;\n  margin-left: 15px;\n  margin-right: 35px;\n  box-shadow: ${shadow.conve};\n  &:active {\n    box-shadow: ${shadow.concave};\n    transform: scale(0.99, 0.99);\n  }\n`;\n\nclass DelForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: 0,\n    };\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doChange(e) {\n    this.setState({\n      number: e.target.value,\n    });\n  }\n\n  doAction(e) {\n    e.preventDefault();\n    let action = deleteMemo(this.state.number);\n    this.props.dispatch(action);\n    this.setState({\n      number: 0,\n    });\n  }\n\n  render() {\n    let n = 0;\n    let items = this.props.data.map((value) => (\n      <option key={n} value={n++}>\n        {value.message}\n      </option>\n    ));\n\n    return (\n      <Container>\n        <Form onSubmit={this.doAction}>\n          <Select onChange={this.doChange} defaultValue='-1'>\n            {items}\n          </Select>\n          <Btn type='submit' value='Del' />\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default connect((state) => state)(DelForm);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Memo from '../molecules/Memo';\nimport AddForm from '../molecules/AddForm';\nimport FindForm from '../molecules/FindForm';\nimport DelForm from '../molecules/DelForm';\nimport { colors } from '../../styles/variable';\n\nconst Container = styled.div`\n  background: ${colors.primary};\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  color: ${colors.black};\n  margin: 50px 0 30px 0;\n`;\n\nconst Table = styled.table`\n  margin: 5px auto 20px auto;\n`;\n\nconst MemoApp = () => {\n  return (\n    <Container>\n      <Title>Redux Memo</Title>\n      <AddForm />\n      <Table>\n        <tbody>\n          <tr>\n            <td>\n              <FindForm />\n            </td>\n            <td>\n              <DelForm />\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n      <Memo />\n    </Container>\n  );\n};\n\nexport default MemoApp;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { GlobalStyle } from './styles';\nimport MemoApp from './components/templates/Memo';\nimport { connect } from 'react-redux';\n\nconst Container = styled.div``;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Container>\n        <GlobalStyle />\n        <MemoApp />\n      </Container>\n    );\n  }\n}\n\nApp = connect()(App);\n\n// messege component\n\nclass Message extends Component {\n  render() {\n    return (\n      <p>\n        {this.props.message}: {this.props.counter}\n      </p>\n    );\n  }\n}\n\n// store connect\n\nMessage = connect((state) => state)(Message);\n\n// button component\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  // click => dispatch\n\n  doAction(e) {\n    if (e.shiftkey) {\n      this.props.dispatch({ type: 'DECREMENT' });\n    } else if (e.ctrlKey) {\n      this.props.dispatch({ type: 'RESET' });\n    } else {\n      this.props.dispatch({ type: 'INCREMENT ' });\n    }\n  }\n\n  render() {\n    return <button onClick={this.doAction}>click</button>;\n  }\n}\n\n// store connect\n\nButton = connect()(Button);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport MemoStore, { memoReducer } from './store/Store';\nimport App from './App';\n\n// Redux Persist Setting\n\nconst persistConfig = {\n  key: 'memo',\n  storage,\n};\n\n// persist reducer\n\nconst persistedReducer = persistReducer(persistConfig, memoReducer);\n\n// store persister\n\nlet store = createStore(persistedReducer);\nlet pstore = persistStore(store);\n\n// rendering\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<p>loading...</p>} persistor={pstore}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\nexport default pstore;\n"],"sourceRoot":""}